{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/templates/post-list.js"],"names":["Pagination","currentPage","pageCount","className","title","to","postListQuery","PostList","data","pageContext","posts","allMarkdownRemark","edges","filter","post","node","frontmatter","length","map","key","id","path","src","image","alt","date","tags","tag","excerpt"],"mappings":"6FAAA,uEAIaA,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,UAAf,OACtB,yBAAKC,UAAU,cACM,IAAhBF,EACO,kBAAC,OAAD,CACIG,MAAM,sBACNC,GAAE,KAFN,iBAKRJ,EAAc,EACN,kBAAC,OAAD,CACIG,MAAM,sBACNC,GAAE,KAAMJ,EAAc,IAF1B,iBAKJ,+BAbR,QAcUA,EAdV,OAc2BC,EACtBD,EAAcC,EACP,kBAAC,OAAD,CACIE,MAAM,kBACNC,GAAE,KAAMJ,EAAc,IAF1B,iBAKJ,kC,kCC1BZ,8HA0CaK,EAAa,aAwBXC,UA3DE,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACNC,EAAUF,EAAKG,kBAAtBC,MACR,OACI,kBAAC,IAAD,KACI,yBAAKT,UAAU,YACVO,EACIG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYZ,MAAMa,OAAS,KACpDC,KAAI,YAAqB,IAAZJ,EAAW,EAAjBC,KACJ,OACI,yBAAKZ,UAAU,cAAcgB,IAAKL,EAAKM,IACnC,kBAAC,OAAD,CAAMf,GAAIS,EAAKE,YAAYK,MACvB,yBAAKlB,UAAU,uBACX,yBAAKA,UAAU,mBAAmBmB,IAAKR,EAAKE,YAAYO,MAAOC,IAAI,MAEvE,yBAAKrB,UAAU,sBACX,kBAAC,OAAD,CAAME,GAAIS,EAAKE,YAAYK,KACrBlB,UAAW,oBAAqBW,EAAKE,YAAYZ,OACvD,uBAAGD,UAAW,mBAAoBW,EAAKE,YAAYS,MAClDX,EAAKE,YAAYU,KAAKR,KAAI,SAAAS,GAAG,OAC1B,yBAAKxB,UAAW,iBAAkBgB,IAAKQ,GAAMA,MAEjD,uBAAGxB,UAAU,sBAAsBW,EAAKE,YAAYY,gBAKhF,kBAAC,IAAD,CACI1B,UAAWO,EAAYP,UACvBD,YAAaQ,EAAYR,cAE7B,kBAAC,IAAD,CAAKG,MAAM","file":"component---src-templates-post-list-js-ed3ead14150ee5642170.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"gatsby\";\n\n\nexport const Pagination = ({currentPage, pageCount}) => (\n    <nav className=\"pagination\">\n        {currentPage === 2 ? (\n                <Link\n                    title=\"Go to previous page\"\n                    to={`/`}>\n                    ← Newer posts\n                </Link>) :\n        currentPage > 2 ? (\n                <Link\n                    title=\"Go to previous page\"\n                    to={`/${currentPage - 1}`}>\n                    ← Newer posts\n                </Link>) :\n            <span />}\n        Page {currentPage} of {pageCount}\n        {currentPage < pageCount ? (\n                <Link\n                    title=\"Go to next page\"\n                    to={`/${currentPage + 1}`}>\n                    Older posts →\n                </Link>) :\n            <span />}\n    </nav>\n);","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\"\nimport {Pagination} from \"../components/pagination\";\n\n\nconst PostList = ({data, pageContext}) => {\n    const { edges: posts } = data.allMarkdownRemark\n    return (\n        <Layout>\n            <div className=\"postList\">\n                {posts\n                    .filter(post => post.node.frontmatter.title.length > 0)\n                    .map(({ node: post }) => {\n                        return (\n                            <div className=\"postPreview\" key={post.id}>\n                                <Link to={post.frontmatter.path}>\n                                    <div className=\"postPreviewImageDiv\">\n                                        <img className=\"postPreviewImage\" src={post.frontmatter.image} alt=\"\"/>\n                                    </div>\n                                    <div className=\"postPreviewContent\">\n                                        <Link to={post.frontmatter.path}\n                                              className={'postPreviewTitle'}>{post.frontmatter.title}</Link>\n                                        <p className={'postPreviewDate'}>{post.frontmatter.date}</p>\n                                        {post.frontmatter.tags.map(tag => (\n                                            <div className={'postPreviewTag'} key={tag}>{tag}</div>\n                                        ))}\n                                        <p className=\"postPreviewExcerpt\">{post.frontmatter.excerpt}</p>\n                                    </div></Link>\n                            </div>\n                        )})}\n            </div>\n            <Pagination\n                pageCount={pageContext.pageCount}\n                currentPage={pageContext.currentPage}>\n            </Pagination>\n            <SEO title=\"Posts\" />\n        </Layout>\n    )\n}\n\nexport const postListQuery = graphql`\n  query ($skip: Int, $limit: Int){\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            excerpt\n            image\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default PostList\n"],"sourceRoot":""}