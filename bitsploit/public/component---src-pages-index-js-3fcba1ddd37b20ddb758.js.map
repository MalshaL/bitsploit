{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/pages/index.js"],"names":["Pagination","currentPage","pageCount","className","title","to","IndexPage","posts","data","allMarkdownRemark","edges","filter","post","node","frontmatter","length","map","key","id","path","src","image","alt","date","tags","tag","excerpt","indexQuery"],"mappings":"6FAAA,uEAIaA,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,UAAf,OACtB,yBAAKC,UAAU,cACM,IAAhBF,EACO,kBAAC,OAAD,CACIG,MAAM,sBACNC,GAAE,KAFN,iBAKRJ,EAAc,EACN,kBAAC,OAAD,CACIG,MAAM,sBACNC,GAAE,KAAMJ,EAAc,IAF1B,iBAKJ,+BAbR,QAcUA,EAdV,OAc2BC,EACtBD,EAAcC,EACP,kBAAC,OAAD,CACIE,MAAM,kBACNC,GAAE,KAAMJ,EAAc,IAF1B,iBAKJ,kC,kCC1BZ,mKAOe,SAASK,EAAT,GAA4B,IACxBC,EADuB,EAAPC,KACDC,kBAAtBC,MAER,OACI,kBAAC,IAAD,KACI,yBAAKP,UAAU,YACVI,EACII,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYV,MAAMW,OAAS,KACpDC,KAAI,YAAqB,IAAZJ,EAAW,EAAjBC,KACJ,OACI,yBAAKV,UAAU,cAAcc,IAAKL,EAAKM,IACnC,kBAAC,OAAD,CAAMb,GAAIO,EAAKE,YAAYK,MACvB,yBAAKhB,UAAU,uBACX,yBAAKA,UAAU,mBAAmBiB,IAAKR,EAAKE,YAAYO,MAAOC,IAAI,MAEvE,yBAAKnB,UAAU,sBACX,kBAAC,OAAD,CAAME,GAAIO,EAAKE,YAAYK,KACrBhB,UAAW,oBAAqBS,EAAKE,YAAYV,OACvD,uBAAGD,UAAW,mBAAoBS,EAAKE,YAAYS,MAClDX,EAAKE,YAAYU,KAAKR,KAAI,SAAAS,GAAG,OAC1B,yBAAKtB,UAAW,iBAAkBc,IAAKQ,GAAMA,MAEjD,uBAAGtB,UAAU,sBAAsBS,EAAKE,YAAYY,gBAKhF,kBAAC,IAAD,CACIxB,UA1BK,EA2BLD,YAAa,IAEjB,kBAAC,IAAD,CAAKG,MAAM,UAKhB,IAAMuB,EAAU","file":"component---src-pages-index-js-3fcba1ddd37b20ddb758.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"gatsby\";\n\n\nexport const Pagination = ({currentPage, pageCount}) => (\n    <nav className=\"pagination\">\n        {currentPage === 2 ? (\n                <Link\n                    title=\"Go to previous page\"\n                    to={`/`}>\n                    ← Newer posts\n                </Link>) :\n        currentPage > 2 ? (\n                <Link\n                    title=\"Go to previous page\"\n                    to={`/${currentPage - 1}`}>\n                    ← Newer posts\n                </Link>) :\n            <span />}\n        Page {currentPage} of {pageCount}\n        {currentPage < pageCount ? (\n                <Link\n                    title=\"Go to next page\"\n                    to={`/${currentPage + 1}`}>\n                    Older posts →\n                </Link>) :\n            <span />}\n    </nav>\n);","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport {graphql, Link} from \"gatsby\";\nimport SEO from \"../components/seo\";\nimport {Pagination} from \"../components/pagination\";\n\n\nexport default function IndexPage({data}) {\n    const { edges: posts } = data.allMarkdownRemark\n    const numPages = 2\n    return (\n        <Layout>\n            <div className=\"postList\">\n                {posts\n                    .filter(post => post.node.frontmatter.title.length > 0)\n                    .map(({ node: post }) => {\n                        return (\n                            <div className=\"postPreview\" key={post.id}>\n                                <Link to={post.frontmatter.path}>\n                                    <div className=\"postPreviewImageDiv\">\n                                        <img className=\"postPreviewImage\" src={post.frontmatter.image} alt=\"\"/>\n                                    </div>\n                                    <div className=\"postPreviewContent\">\n                                        <Link to={post.frontmatter.path}\n                                              className={'postPreviewTitle'}>{post.frontmatter.title}</Link>\n                                        <p className={'postPreviewDate'}>{post.frontmatter.date}</p>\n                                        {post.frontmatter.tags.map(tag => (\n                                            <div className={'postPreviewTag'} key={tag}>{tag}</div>\n                                        ))}\n                                        <p className=\"postPreviewExcerpt\">{post.frontmatter.excerpt}</p>\n                                    </div></Link>\n                            </div>\n                        )})}\n            </div>\n            <Pagination\n                pageCount={numPages}\n                currentPage={1}>\n            </Pagination>\n            <SEO title=\"Home\" />\n        </Layout>\n    )\n}\n\nexport const indexQuery = graphql`\n  query {\n    allMarkdownRemark (\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 6\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            excerpt\n            image\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}